# BlindSpot 프로젝트 개요

BlindSpot은 **뉴스 편향성 시각화 플랫폼**입니다. 동일한 이슈에 대해 언론사별로 어떻게 다르게 보도하는지 한눈에 비교할 수 있는 서비스입니다.

## 🎯 핵심 기능
- **이슈 클러스터링**: AI로 유사한 기사들을 자동 그룹화
- **편향성 시각화**: 언론사별 보도 관점 차이를 시각적으로 표현
- **실시간 뉴스 수집**: 4개 주요 언론사에서 정치/사회/경제 기사 크롤링

## 📁 프로젝트 구조
```
blindspot/
├── crawler/           # 뉴스 크롤링 시스템
│   ├── crawl_*.py    # 언론사별 크롤러
│   ├── main_crawler.py # 통합 실행
│   └── utils/        # 크롤링 유틸리티
├── backend/          # API 서버 (FastAPI)
├── frontend/         # 웹 UI (Next.js)
├── data/            # 수집된 데이터
└── docs/            # 문서
```

## 🚀 개발 진행 상황

### ✅ 완료된 단계
1. **데이터 기획/문서화** - 이슈, 기사, 성향 데이터 정의
2. **기능 명세서 작성** - 홈 피드, 이슈 상세 등 UI 기능 정의  
3. **DB 구조화** - Supabase 선택, articles/clusters 테이블 설계
4. **로컬 디렉토리 구조** - crawler/, utils/, data/ 폴더 구성
5. **데이터 수집 (크롤링)** - 295개 기사 수집, 98.3% 본문 성공률 달성

### 🔜 다음 단계
6. **데이터 저장 (DB)** - Supabase에 JSON → row 형태로 저장
7. **이슈 클러스터링** - OpenAI 임베딩 + DBSCAN/KMeans
8. **프론트 연동** - API 연결 → 카드 UI 구현
9. **배포 (Vercel)** - 전체 앱 배포
10. **피드백 수집** - 사용자 테스트 & UX 개선

## 📊 크롤링 성과
- **한겨레**: 90개 ✅ (100% 본문 성공)
- **조선일보**: 90개 ✅ (97.8% 본문 성공)  
- **YTN**: 90개 ✅ (100% 본문 성공)
- **KBS**: 25개 (88% 본문 성공)

## 🛠️ 기술 스택
- **크롤링**: Python, Playwright, BeautifulSoup
- **DB**: Supabase (PostgreSQL)
- **백엔드**: FastAPI
- **프론트**: Next.js, React
- **AI**: OpenAI API (임베딩, 클러스터링)
- **배포**: Vercel
description:
globs:
alwaysApply: false
---
