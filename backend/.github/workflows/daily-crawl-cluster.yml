name: Daily News Crawling and Clustering

on:
  # 매일 UTC 15:00 (한국시간 00:00)에 실행
  schedule:
    - cron: '0 15 * * *'
  
  # 수동 실행 가능
  workflow_dispatch:
    inputs:
      run_crawler:
        description: 'Run Crawler'
        required: true
        default: 'true'
        type: boolean
      run_cluster:
        description: 'Run Clustering'
        required: true
        default: 'true'
        type: boolean

jobs:
  # Job 1: 크롤링 및 업로드
  crawl-and-upload:
    runs-on: ubuntu-latest
    if: ${{ github.event.inputs.run_crawler != 'false' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create data directories
      run: |
        mkdir -p crawler/data/raw
        mkdir -p backend/results
    
    - name: 🔍 Step 1 - Run News Crawler
      working-directory: ./crawler
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "🔍 [1/3] Starting news crawling..."
        echo "📰 Collecting articles from: 한겨레, 조선일보, KBS, YTN"
        python main_crawler.py
        echo "✅ Crawling completed successfully!"
    
    - name: 📤 Step 2 - Upload to Supabase
      working-directory: ./backend
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "📤 [2/3] Uploading articles to Supabase..."
        python supabase_uploader.py
        echo "✅ Upload completed successfully!"
        echo "📊 Ready for clustering analysis..."

    - name: Archive crawled data
      uses: actions/upload-artifact@v3
      with:
        name: crawled-data-${{ github.run_number }}
        path: crawler/data/raw/*.json
        retention-days: 7

  # Job 2: 클러스터링 (크롤링 완료 후 실행)
  clustering-analysis:
    runs-on: ubuntu-latest
    needs: crawl-and-upload  # 크롤링 완료 후에만 실행
    if: ${{ github.event.inputs.run_cluster != 'false' && (success() || github.event.inputs.run_crawler == 'false') }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create results directory
      run: |
        mkdir -p backend/results
    
    - name: 🧠 Step 3 - Run Clustering Analysis
      working-directory: ./backend
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      run: |
        echo "🧠 [3/3] Starting AI clustering analysis..."
        echo "🔍 Analyzing news articles for similar issues..."
        echo "⚖️ Calculating bias distribution..."
        python main_cluster.py
        echo "✅ Clustering analysis completed!"
        echo "🎉 New issues available in BlindSpot app!"
    
    - name: Archive clustering results
      uses: actions/upload-artifact@v3
      with:
        name: clustering-results-${{ github.run_number }}
        path: |
          backend/results/*.json
          backend/results/*.txt
        retention-days: 30
    
    - name: 🎉 Summary
      run: |
        echo "🎉 Daily news analysis completed successfully!"
        echo ""
        echo "📊 Process Summary:"
        echo "   1. ✅ News Crawling (한겨레, 조선일보, KBS, YTN)"
        echo "   2. ✅ Data Upload to Supabase"
        echo "   3. ✅ AI-powered Issue Clustering"
        echo "   4. ✅ Bias Analysis Complete"
        echo ""
        echo "🌐 Check your BlindSpot app for new issues!"
        echo "📁 Results archived as artifacts for 30 days" 